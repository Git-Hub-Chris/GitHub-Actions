name: Windows Cloud PC - Anydesk (Optimized)

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Building...
    runs-on: windows-latest
    timeout-minutes: 10080  # MÃ¡ximo de 7 dias para evitar tempo de execuÃ§Ã£o excessivo

    steps:
      - name: Downloading & Installing Essentials
        run: |
          # Baixa o arquivo .bat para instalar componentes essenciais
          Invoke-WebRequest -Uri "https://www.dropbox.com/scl/fi/7eiczvgil84czu55dxep3/Downloads.bat?rlkey=wzdc1wxjsph2b7r0atplmdz3p&dl=1" -OutFile "Downloads.bat"
          # Executa o script .bat para instalar os componentes
          cmd /c Downloads.bat

      - name: Log In To AnyDesk
        run: |
          # Verifica se o arquivo start.bat existe antes de executar
          if (Test-Path "start.bat") {
            cmd /c start.bat
          } else {
            Write-Host "Arquivo start.bat nÃ£o encontrado. Verifique a configuraÃ§Ã£o."
          }

      - name: Monitor and Restart AnyDesk if Needed
        run: |
          # Monitora a conexÃ£o do AnyDesk e reinicia se necessÃ¡rio
          while ($true) {
            $process = Get-Process -Name "AnyDesk" -ErrorAction SilentlyContinue
            if (-not $process) {
              Write-Host "AnyDesk nÃ£o estÃ¡ rodando, reiniciando..."
              cmd /c start.bat
            }
            Start-Sleep -Seconds 300  # Verifica a cada 5 minutos
          }

      - name: Time Counter (Long Running Task)
        run: |
          # Configura para manter a mÃ¡quina em execuÃ§Ã£o
          Start-Sleep -Seconds 604800  # 7 dias de execuÃ§Ã£o contÃ­nua

      - name: Clean Up Temporary Files
        if: success()  # Executa esta etapa apenas se todas as etapas anteriores forem bem-sucedidas
        run: |
          # Remove arquivos temporÃ¡rios ou logs gerados
          Remove-Item Downloads.bat -Force
          Write-Host "Limpeza completa."name: Step 3, Add actions

# This step triggers after every push to welcome-workflow.
# This workflow updates from step 3 to step 4.

# This will run every time we push to welcome-workflow.
# Reference: https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
on:
  workflow_dispatch:
  push:
    branches:
      - welcome-workflow

# Reference: https://docs.github.com/en/actions/security-guides/automatic-token-authentication
permissions:
  # Need `contents: read` to checkout the repository.
  # Need `contents: write` to update the step metadata.
  contents: write

jobs:
  # Get the current step to only run the main job when the learner is on the same step.
  get_current_step:
    name: Check current step number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: get_step
        run: |
          echo "current_step=$(cat ./.github/steps/-step.txt)" >> $GITHUB_OUTPUT
    outputs:
      current_step: ${{ steps.get_step.outputs.current_step }}

  on_add_actions:
    name: On add actions
    needs: get_current_step

    # We will only run this action when:
    # 1. This repository isn't the template repository.
    # 2. The step is currently 3.
    # Reference: https://docs.github.com/en/actions/learn-github-actions/contexts
    # Reference: https://docs.github.com/en/actions/learn-github-actions/expressions
    if: >-
      ${{ !github.event.repository.is_template
          && needs.get_current_step.outputs.current_step == 3 }}

    # We'll run Ubuntu for performance instead of Mac or Windows.
    runs-on: ubuntu-latest

    steps:
      # We'll need to check out the repository so that we can edit the README.
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Let's get all the branches.

      # Verify the learner added the file contents.
      - name: Check workflow contents, steps
        uses: skills/action-check-file@v1
        with:
          file: ".github/workflows/welcome.yml"
          search: "steps:"

      # In README.md, switch step 3 for step 4.
      - name: Update to step 4
        uses: skills/action-update-step@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          from_step: 3
          to_step: 4
          branch_name: welcome-workflow
